fit_arima2 <- Arima(beer_ts, order = c(3, 0, 1), seasonal = c(1, 1, 0))
fit_arima1 %>%
forecast(h=4*4) %>%
autoplot()
fit_arima1 %>%
forecast::forecast(h=4*4) %>%
autoplot()
fit_arima2 %>%
forecast::forecast(h=4*4) %>%
autoplot()
accuracy(fit_arima1, fit_arima2)
accuracy(fit_arima1)
accuracy(fit_arima2)
rbind(accuracy(fit_arima1), accuracy(fit_arima2))
# Compare the accuracy of two models
rbind(accuracy(fit_arima1), accuracy(fit_arima2))
?us_change
autoplot(us_change, lwd=.9)
autoplot(us_change, lwd=.8)
autoplot(us_change, lwd=.8) +
theme_minimal()
us_change
autoplot(us_change, aes(x = Savings, y = Consumption)) +
geom_point() +
ggtitle("Scatter plot of Consumption vs. Savings") +
xlab("Savings (%)") + ylab("Consumption (%)")
us_change$autoplot(us_change, aes(x = Savings, y = Consumption))
autoplot(us_change, "Consumption")
autoplot(us_change, Consumption)
library(patchwork)
p1 <- autoplot(us_change, Consumption)
p2 <- autoplot(us_change, Savings)
p1 / p2
model <- auto.arima(consumption, xreg = savings, seasonal = FALSE)
us_change$Quarter
min(us_change$Quarter)
consumption <- ts(us_change$Consumption, start=min(us_change$Quarter), frequency = 4)
savings <- ts(us_change$Savings, start=min(us_change$Quarter), frequency = 4)
model <- auto.arima(consumption, xreg = savings, seasonal = FALSE)
summary(model)
model %>%
forecast::forecast(h=10)
future_savings <- rep(2, 10)
model %>%
forecast::forecast(h=10, xreg=future_savings)
model %>%
forecast::forecast(h=10, xreg=future_savings) %>%
autoplot()
model %>%
forecast::forecast(h=10, xreg=future_savings) %>%
autoplot() +
ggtitle("Forecasted Consumption") +
xlab("Quarters") + ylab("Consumption (%)")
model %>%
forecast::forecast(h=10, xreg=future_savings) %>%
autoplot() +
ggtitle("Forecasted Consumption") +
xlab("Quarters") + ylab("Consumption (%)") +
theme_minimal()
checkresiduals(model)
checkresiduals(model)
checkresiduals(model)
library(caret)
?RMSE
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE
)
library(neuralnet)
install.packages("neuralnet")
install.packages("gbm")
library(tm)
?Corpus
?glimplse
?glimpse
## Data description, manupulation and selection
## Data description, manupulation and selection
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read_csv("house_price.csv")
df
library(tidyverse)
df <- read_csv("house_price.csv")
df
glimpse(df)
library(tidyverse)
# Load Data sets and combine two area into one data frame
area1 <- area1 %>%
mutate(area = "UC Davis")
library(tidyverse)
# Load Data sets and combine two area into one data frame
area1 <- read_csv("UC_Davis.csv") %>%
mutate(area = "UC Davis")
area2 <- read_csv("UC_Berkeley") %>%
mutate(area = "UC Berkeley")
library(tidyverse)
# Load Data sets and combine two area into one data frame
area1 <- read_csv("UC_Davis.csv") %>%
mutate(area = "UC Davis")
area2 <- read_csv("UC_Berkeley.csv") %>%
mutate(area = "UC Berkeley")
combined_areas <- bind_rows(area1, area2)
# Visualization for rent price
combined_areas %>%
mutate(rent_amount = as.numeric(gsub(",", "", gsub("\\$", "", rent_amount)))) %>%
ggplot(aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.5) +
geom_density(lwd=.9) +
scale_fill_manual(values=c("#328adc", "#c42b1c")) +
scale_color_manual(values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)") +
theme(plot.margin = margin(1,1,1,1,"cm"),
legend.position = "bottom")
area1$rent_amount
library(tidyverse)
# Load Data sets and combine two area into one data frame
area1 <- read_csv("UC_Davis.csv") %>%
mutate(area = "UC Davis")
area2 <- read_csv("UC_Berkeley.csv") %>%
mutate(area = "UC Berkeley")
combined_areas <- bind_rows(area1, area2)
# Convert rent amount
combined_areas <- combined_areas %>%
mutate(rent_amount = as.numeric(gsub(",", "", gsub("\\$", "", rent_amount))))
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.5) +
geom_density(lwd=.9) +
scale_fill_manual(values=c("#328adc", "#c42b1c")) +
scale_color_manual(values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)") +
theme(plot.margin = margin(1,1,1,1,"cm"),
legend.position = "bottom")
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual(values=c("#328adc", "#c42b1c")) +
scale_color_manual(values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
legend.position = "bottom")
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
scale_color_manual("Area", values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
legend.position = "bottom")
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
scale_color_manual("Area", values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
panel.grid = element_blank(),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
legend.position = "bottom")
range(combined_areas$rent_amount)
colSums(is.na(combined_areas))
dim(combined_areas)
iqr <- IQR(combined_areas$rent_amount)
lower <- quantile(combined_areas$rent_amount, .25) - 1.5 * iqr
upper <- quantile(combined_areas$rent_amount, .25) + 1.5 * iqr
iqr <- IQR(combined_areas$rent_amount)
lower <- quantile(combined_areas$rent_amount, .25) - 1.5 * iqr
upper <- quantile(combined_areas$rent_amount, .75) + 1.5 * iqr
upper
iqr <- IQR(combined_areas$rent_amount)
lower <- quantile(combined_areas$rent_amount, .25) - 1.5 * iqr
upper <- quantile(combined_areas$rent_amount, .75) + 1.5 * iqr
combined_areas_clean <- subset(
combined_areas, rent_amount >= lower & rent_amount <= upper)
combined_areas_clean
ggplot(combined_areas_clean, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
scale_color_manual("Area", values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
panel.grid = element_blank(),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
legend.position = "bottom")
t.test(rent_amount ~ Area, data=combined_areas_clean)
t.test(rent_amount ~ area, data=combined_areas_clean)
ggplot(combined_areas_clean, aes(x=area, y=rent_amount)) +
geom_boxplot(aes(fill=area))
ggplot(combined_areas_clean, aes(x=area, y=rent_amount)) +
geom_boxplot(aes(fill=area), width=.7, alpha=.5) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c"))
ggplot(combined_areas_clean, aes(x=area, y=rent_amount)) +
geom_boxplot(aes(fill=area), width=.7, alpha=.5) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
theme_minimal() +
theme(
axis.text = element_text(color="black", size=12),
axis.title = element_text(color="black", size=14)
)
ggplot(combined_areas_clean, aes(x=area, y=rent_amount)) +
geom_boxplot(aes(fill=area), width=.7, alpha=.5) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
labs(x="Area", y="Rent Amount ($)",
title="Rent Amount Comparison Between Two Area") +
theme_minimal() +
theme(
axis.text = element_text(color="black", size=12),
axis.title = element_text(color="black", size=14)
)
ggplot(combined_areas_clean, aes(x=area, y=rent_amount)) +
geom_boxplot(aes(fill=area), width=.7, alpha=.5) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
labs(x="Area", y="Rent Amount ($)",
title="Rent Amount Comparison Between Two Area") +
theme_minimal() +
theme(
axis.text = element_text(color="black", size=12),
axis.title = element_text(color="black", size=14),
plot.title = element_text(color="black", size=15, hjust=.5)
)
ggplot(combined_areas_clean, aes(x=area, y=rent_amount)) +
geom_boxplot(aes(fill=area), width=.7, alpha=.5) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
labs(x="Area", y="Rent Amount ($)",
title="Rent Amount Comparison Between Two Area") +
theme_minimal() +
theme(
axis.text = element_text(color="black", size=12),
axis.title = element_text(color="black", size=14),
plot.title = element_text(color="black", size=15, hjust=.5, face="bold")
)
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
scale_color_manual("Area", values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
panel.grid = element_blank(),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
legend.position = "bottom")
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
scale_color_manual("Area", values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)", y="Density",
title="Distribution of rent amount across two area") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
panel.grid = element_blank(),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
plot.title = element_text(color="black", size=15, hjust=.5, face="bold")
legend.position = "bottom")
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
scale_color_manual("Area", values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)", y="Density",
title="Distribution of rent amount across two area") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
panel.grid = element_blank(),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
plot.title = element_text(color="black", size=15, hjust=.5, face="bold"),
legend.position = "bottom")
# Visualization Distribution
ggplot(combined_areas, aes(x=rent_amount, col=area)) +
geom_histogram(aes(y=..density.., fill=area), alpha=.4) +
geom_density(lwd=.9) +
scale_fill_manual("Area", values=c("#328adc", "#c42b1c")) +
scale_color_manual("Area", values=c("#328adc", "#c42b1c")) +
facet_wrap(~area, ncol = 1) +
labs(x="Rent Amount ($)", y="Density",
title="Distribution of rent amount across two area") +
theme_light() +
theme(plot.margin = margin(1,1,1,1,"cm"),
panel.grid = element_blank(),
strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=11),
plot.title = element_text(color="black", size=13, hjust=.5, face="bold"),
legend.position = "bottom")
dim(combined_areas)
glimpse(combined_areas)
table(combined_areas$area)
combined_areas_clean
combined_areas_clean$rent_amount
table(combined_areas_clean$area)
knitr::opts_chunk$set(echo=T, warning=F, message=F)
calculate_stat <- function(arr, group) {
data.frame(
"Group"=group,
"Mean"=mean(arr$rent_amount),
"SD"=sd(arr$rent_amount),
"Median"=median(arr$rent_amount),
"Min"=min(arr$rent_amount),
"Max"=max(arr$rent_amount)
)
}
rbind(
calculate_stat(subset(combined_areas_clean, area=="UC Berkeley"), "UC Berkeley"),
calculate_stat(subset(combined_areas_clean, area=="UC Davis", "UC Davis"),
calculate_stat(combined_areas_clean, "Total")
)
rbind(
calculate_stat(subset(combined_areas_clean, area=="UC Berkeley"), "UC Berkeley"),
calculate_stat(subset(combined_areas_clean, area=="UC Davis"), "UC Davis"),
calculate_stat(combined_areas_clean, "Total")
)
knitr::kable(stat_sm, digits=3)
calculate_stat <- function(arr, group) {
data.frame(
"Group"=group,
"Mean"=mean(arr$rent_amount),
"SD"=sd(arr$rent_amount),
"Median"=median(arr$rent_amount),
"Min"=min(arr$rent_amount),
"Max"=max(arr$rent_amount)
)
}
stat_sm <- rbind(
calculate_stat(subset(combined_areas_clean, area=="UC Berkeley"), "UC Berkeley"),
calculate_stat(subset(combined_areas_clean, area=="UC Davis"), "UC Davis"),
calculate_stat(combined_areas_clean, "Total")
)
knitr::kable(stat_sm, digits=3)
install.packages("bookdown")
install.packages("xfun")
library(tidyverse)
library(readxl)
df <- read_excel("SSGC_8802_Assignment_3_data_Yc47337_Huang_Runyu.xlsx")
library(tidyverse)
library(readxl)
df <- read_excel("SSGC_8802_Assignment_3_data_Yc47337_Huang_Runyu.xlsx")
df
library(lavaan)
22 / 3
6 + 7 + 6
19 / 3
library(tidyr)
library(dplyr)
library(ggplot2)
library(corrplot)
options("digits" = 5)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
theme_set(theme_light())
library(tidyverse)
# Load data set
df <- read.csv("data/anuran_species_richness.csv")
# Convert data to long data format
df_long <- df %>%
pivot_longer(
species_richness:traffic_density,
names_to = "Variable",
values_to = "value"
)
# Show numerical statistics
stat_summary <- df_long %>%
group_by(Variable) %>%
summarise(
"Mean" = mean(value),
"SD" = sd(value),
"Min" = min(value),
"Q25" = quantile(value, .25),
"Median" = median(value),
"Max" = max(value),
"Q75" = quantile(value, .75)
)
# Display statistics in table
knitr::kable(
stat_summary, digits=2,
caption = "Table 1. Summative statistics for variables in data set"
)
# Show variable distribution for each variable
ggplot(df_long, aes(x=value)) +
geom_histogram(aes(fill=Variable), col="white") +
facet_wrap(~Variable, ncol=3, scales="free") +
labs(x="", y="Count", title="Figure 1. Distribution of variables in data set") +
theme_light() +
theme(strip.background = element_rect(fill="grey90"),
strip.text = element_text(color="black", size=13, face="bold"),
plot.title = element_text(hjust=.5, face="bold", size=13),
panel.grid = element_blank(),
legend.position = "none")
# Get spearman correlation
cor_mat <- cor(df[, 2:6], method="spearman")
# Display in table
knitr::kable(
cor_mat, digits=3, caption="Table 2. Correlation between variables"
)
library(corrplot)
# Visualize the correlation
corrplot(cor_mat, , method ="shade", addCoef.col=TRUE, tl.col="black")
library(gtsummary)
mod <- lm(species_richness ~ percent_forest + total_edge_m +
traffic_density, data=df)
tbl_regression(
mod,
pvalue_fun = function(x) style_pvalue(x, digits=3)
) %>% as_gt() %>%
gt::tab_header(title = "Table 3. Multiple Linear Regression Model")
par(mfrow=c(2, 2))
plot(mod)
par(mfrow=c(1, 1))
# Define the model
model <- '
# Regressions
Ac_raw ~ Pd_raw + Ba_raw
Ce_raw ~ Ac_raw
'
# Fit the model
fit <- sem(model, data=df, fixed.x = FALSE)
df
library(tidyverse)
library(readxl)
library(lavaan)
df <- read_excel("SSGC_8802_Assignment_3_data_Yc47337_Huang_Runyu.xlsx")
# Define the model
model <- '
# Regressions
Ac_raw ~ Pd_raw + Ba_raw
Ce_raw ~ Ac_raw
'
# Fit the model
fit <- sem(model, data=df, fixed.x = FALSE)
# Summary of the model
summary(fit, fit.measures = TRUE, standardized = TRUE)
# Define the model
model <- '
# Regressions
Ac_raw ~ Pd_raw + Ba_raw
Ce_raw ~ Ac_raw
'
# Fit the model
fit <- sem(model, data=df, fixed.x = FALSE)
# Summary of the model
summary(fit, fit.measures=T, rsquare=T, ci=T, standardized=T, modindices=T)
summary(fit, fit.measures=T, rsquare=T, ci=T, standardized=F, modindices=T)
summary(fit, fit.measures=T, rsquare=T, ci=T, standardized=T, modindices=T)
1.127 / 0.486
-0.059 / 0.243
# Specify the measurement model
measurement_model <- '
# Measurement model
Pd =~ Pd1 + Pd2 + Pd3
Ba =~ Ba1 + Ba2 + Ba3
Ac =~ Ac1 + Ac2 + Ac3
Ce =~ Ce1 + Ce2 + Ce3
'
# Fit the measurement model
measurement_fit <- cfa(measurement_model, data=df)
summary(measurement_fit, fit.measures = TRUE, standardized = TRUE)
# Specify the structural model
structural_model <- '
# Measurement model
Pd =~ Pd1 + Pd2 + Pd3
Ba =~ Ba1 + Ba2 + Ba3
Ac =~ Ac1 + Ac2 + Ac3
Ce =~ Ce1 + Ce2 + Ce3
# Structural model
Ac ~ Pd + Ba
Ce ~ Ac
# Covariance between Pd and Ba
Pd ~~ Ba
'
# Fit the structural model
structural_fit <- sem(structural_model, data=df, fixed.x = FALSE)
summary(structural_fit, fit.measures=T, rsquare=T, ci=T, standardized=T, modindices=T)
summary(fit, fit.measures=T, rsquare=T, ci=T, standardized=T, modindices=T)
summary(structural_fit, fit.measures=T, rsquare=T, ci=T, standardized=T, modindices=T)
setwd("D:/personal/20241124-git practice/User B/Git_renv/")
getwd()
library(renv)
activate()
renv::install()
renv::install()
renv::install("here")
renv::restore()
renv::restore()
renv::restore()
